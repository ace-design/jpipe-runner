name: "jPipe Runner"
description: "GitHub Action to run justification diagrams of jpipe"
author: "Jason Lyu"

inputs:
  jd_file:
    description: "Path to the justification .jd file"
    required: true
  variable:
    description: "Define one or more variables in the format NAME:VALUE, separated by newlines"
    required: false
  library:
    description: "Specify one or more Python libraries to load, separated by newlines"
    required: false
  diagram:
    description: "Specify diagram pattern or wildcard"
    required: false
    default: "*"
  dry_run:
    description: "Perform a dry run without actually executing justifications"
    required: false
    default: "false"
  python_path:
    description: "Specify a Python path to run jPipe Runner"
    required: false
    default: ""
  working_directory:
    description: "Specify a working directory to run jPipe Runner"
    required: false
    default: "."
  version:
    description: "jPipe Runner version to use, e.g. '0.0.1'. The main branch version is used by default"
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      if: ${{ !inputs.python_path }}
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install jpipe-runner
      shell: bash
      env:
        PYTHON_PATH: ${{ inputs.python_path || 'python' }}
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "::group::install jpipe-runner"
        # if $PYTHON_PATH -c "import jpipe_runner" &> /dev/null; then
        #    echo "jpipe-runner already installed"
        #    exit 0
        # fi

        if poetry env info --path &> /dev/null; then
          # Install dependency via poetry
          poetry add 'git+https://github.com/ace-design/jpipe-runner.git@${{ inputs.version }}'
        else
          # Fallback to pip installation
          $PYTHON_PATH -m pip install -U 'git+https://github.com/ace-design/jpipe-runner.git@${{ inputs.version }}'
        fi
        echo "::endgroup::"

    - name: Run jpipe-runner
      shell: bash
      env:
        PYTHON_PATH: ${{ inputs.python_path || 'python' }}
      working-directory: ${{ inputs.working_directory }}
      run: |
        CMD="$PYTHON_PATH -m jpipe_runner '${{ inputs.jd_file }}'"
        if [[ "${{ inputs.variable }}" != "" ]]; then
          while IFS= read -r line; do
            if [[ -n "$line" ]]; then
              CMD+=" --variable '${line}'"
            fi
          done <<< "${{ inputs.variable }}"
        fi
        if [[ "${{ inputs.library }}" != "" ]]; then
          while IFS= read -r line; do
            if [[ -n "$line" ]]; then
              CMD+=" --library '${line}'"
            fi
          done <<< "${{ inputs.library }}"
        fi
        if [[ "${{ inputs.diagram }}" != "" ]]; then
          CMD+=" --diagram '${{ inputs.diagram }}'"
        fi
        if [[ "${{ inputs.dry_run }}" == "true" ]]; then
          CMD+=" --dry-run"
        fi
        echo "Running command: $CMD"
        eval $CMD
